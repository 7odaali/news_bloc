import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:news_cubit/api_survices.dart';
import 'package:news_cubit/model.dart';

// (States)
abstract class ArticleState {}

class ArticleInitial extends ArticleState {}

class ArticleLoading extends ArticleState {}

class ArticleLoaded extends ArticleState {
  final Autogenerated articles;

  ArticleLoaded(this.articles);
}

class ArticleError extends ArticleState {
  final String error;

  ArticleError(this.error);
}

// Cubit
class ArticleCubit extends Cubit<ArticleState> {
  final ApiService _apiService;

  ArticleCubit(this._apiService) : super(ArticleInitial());

  Future<void> fetchArticles() async {
    try {
      emit(ArticleLoading());
      final articles = await _apiService.getAllArticles();
      emit(ArticleLoaded(articles!));
    } catch (e) {
      emit(ArticleError('Failed to load articles'));
    }
  }
}
